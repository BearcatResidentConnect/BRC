{"version":3,"sources":["webpack:///src/modules/newproperty/containers/newproperty/newproperty.component.html","webpack:///src/modules/newproperty/containers/newproperty/newproperty.component.scss","webpack:///src/modules/newproperty/newproperty.module.ts","webpack:///src/modules/newproperty/containers/newproperty/newproperty.component.ts","webpack:///src/modules/newproperty/services/newproperty.service.ts","webpack:///src/modules/newproperty/containers/index.ts","webpack:///src/modules/newproperty/services/index.ts"],"names":["NewpropertyModule","imports","providers","declarations","exports","NewpropertyComponent","newpropertyService","datePipe","route","form","user_name","localStorage","getItem","event","key","preventDefault","posting_id","snapshot","params","id","getUserrental","subscribe","data","rentallisting","console","log","today","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","name","accomdationtype","accomStart","numDays","numpeople","numpeopleneed","numRooms","numBaths","appRent","petFriendly","parkingAvail","address","city","state","country","zipcode","description","postPropertydetails","next","postingproperty","alert","selector","changeDetection","OnPush","template","http","formdetails","post","basePath","rental_id","get","containers","services"],"mappings":"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","file":"default~modules-dashboard-dashboard-routing-module~modules-newproperty-newproperty-routing-module-es5.js","sourcesContent":["export default \"<sb-layout-dashboard>\\n    <sb-dashboard-head title=\\\"Add New Property\\\" [hideBreadcrumbs]=\\\"false\\\"></sb-dashboard-head>\\n    <sb-card>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"card-body px-6 pt-6 pb-5\\\">\\n                <!-- <h3 class=\\\"card-title mb-0 text-heading fs-22 lh-15\\\">Add new property</h3> -->\\n                <!-- <p class=\\\"card-text\\\">You can update details</p> -->\\n               <form *ngIf=\\\"!isSuccessful\\\" name=\\\"form\\\" (ngSubmit)=\\\"nf.form.valid && onSubmit()\\\" #nf=\\\"ngForm\\\">\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"name\\\" class=\\\"text-heading\\\">Property name*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" required #nam=\\\"ngModel\\\" name=\\\"nam\\\" \\n                        [(ngModel)]=\\\"name\\\"    >\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"nam.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"nam.errors['required']\\\">Property Name is required</div>\\n                            <div *ngIf=\\\"nam.errors['minlength']\\\">\\n                                Property must be at least 3 characters\\n                            </div>\\n                            <div *ngIf=\\\"nam.errors['maxlength']\\\">\\n                                Property must be at most 20 characters\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"accomtype\\\" class=\\\"text-heading\\\">Accommodation Type*</label>\\n                        <select class=\\\"form-select\\\" aria-label=\\\"Default select example\\\" required #accomtype=\\\"ngModel\\\"\\n                                id=\\\"accomtype\\\" name=\\\"accomtype\\\" [(ngModel)]=\\\"accomdationtype\\\">\\n                          <option value=\\\"\\\" disabled selected>Select</option>\\n                          <option value=\\\"Temporary\\\">Temporary</option>\\n                          <option value=\\\"Permanent\\\">Permanent</option>\\n                        </select>\\n                        <div *ngIf=\\\"accomtype.invalid && (accomtype.dirty || accomtype.touched)\\\" class=\\\"text-danger\\\">\\n                          <div *ngIf=\\\"accomtype.errors.required\\\">\\n                            Accommodation Type is required.\\n                          </div>\\n                        </div>\\n                      </div>\\n                      \\n                </div>\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"numppl\\\" class=\\\"text-heading\\\">Num of people Currently living?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" id=\\\"numppl\\\" name=\\\"numppl\\\"\\n                          [(ngModel)]=\\\"numpeopleneed\\\" #numppl=\\\"ngModel\\\" min=\\\"0\\\" max=\\\"12\\\" required \\n                          (keydown)=\\\"restrictNegativeValues($event)\\\" (input)=\\\"onInput($event.target.value)\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"numppl?.errors && nf.submitted\\\">\\n                          <div *ngIf=\\\"numppl?.errors['required']\\\">Number People Currently living is required</div>\\n                          <div *ngIf=\\\"numppl?.errors['negative']\\\">Negative values are not allowed</div>\\n                          <div *ngIf=\\\"numppl?.errors['min']\\\">Number must be greater than or equal to 0</div>\\n                          <div *ngIf=\\\"numppl?.errors['max']\\\">Number cannot be greater than 99</div>\\n                          <div *ngIf=\\\"numppl?.errors['maxlength']\\\">Maximum length is 2 digits</div>\\n                        </div>\\n                      </div>\\n                      \\n                      \\n                      \\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"numppln\\\" class=\\\"text-heading\\\">Num of people can accommodate?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" id=\\\"numppln\\\" name=\\\"numppln\\\"\\n                        [(ngModel)]=\\\"numpeople\\\"   #numppln=\\\"ngModel\\\" required min=\\\"0\\\" maxlength=\\\"10\\\" (keydown)=\\\"restrictNegativeValues($event)\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"numppln?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"numppln?.errors['required']\\\">Number of people needs accomdation is required</div>\\n                            <div *ngIf=\\\"numppln?.errors['maxlength']\\\">Number cannot be greater than 99</div>\\n                        </div>\\n                        <!-- <div *ngIf=\\\"numppln.invalid && (numppln.dirty || numppln.touched)\\\" class=\\\"text-danger\\\">\\n                            <div *ngIf=\\\"numppln.errors.required\\\">\\n                                Number of people is required.\\n                            </div>\\n                          </div> -->\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"mobile\\\" class=\\\"text-heading\\\">Num of Bedrooms?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" id=\\\"numRooms\\\" name=\\\"numRom\\\"\\n                        [(ngModel)]=\\\"numRooms\\\" min=\\\"0\\\" maxlength=\\\"10\\\"  #numRom=\\\"ngModel\\\" required (keydown)=\\\"restrictNegativeValues($event)\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"numRom?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"numRom?.errors['required']\\\">Number of bedrooms is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\" >\\n                        <label for=\\\"email\\\" class=\\\"text-heading\\\">Num of days?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" name=\\\"numdays\\\" \\n                        [(ngModel)]=\\\"numDays\\\" required  #numdays=\\\"ngModel\\\"  min=\\\"0\\\" maxlength=\\\"10\\\" (keydown)=\\\"restrictNegativeValues($event)\\\">\\n                        <!-- <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" name=\\\"numdays\\\" \\n                        [(ngModel)]=\\\"numDays\\\"   #numdays=\\\"ngModel\\\" style=\\\"visibility:hidden;\\\"> -->\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"numdays?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"numdays?.errors['required']\\\">Number days is required</div>\\n                            \\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"mobile\\\" class=\\\"text-heading\\\">Num of baths?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" id=\\\"numbat\\\" name=\\\"numbat\\\"\\n                        [(ngModel)]=\\\"numBaths\\\"   #numbat=\\\"ngModel\\\" min=\\\"0\\\" required (keydown)=\\\"restrictNegativeValues($event)\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"numbat?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"numbat?.errors['required']\\\">Number baths is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"accomStart\\\" class=\\\"text-heading\\\">Accommodated start date?*</label>\\n                        <input type=\\\"date\\\" class=\\\"form-control form-control-md\\\" name=\\\"accstar\\\" [(ngModel)]=\\\"accomStart\\\" #accstar=\\\"ngModel\\\" required\\n                               [min]=\\\"getCurrentDate()\\\" (input)=\\\"accstar.valid && (accstar.touched || accstar.dirty)\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"accstar?.errors && (accstar.touched || accstar.dirty)\\\">\\n                          <div *ngIf=\\\"accstar?.errors.required\\\">Accommodated start date is required</div>\\n                          <div *ngIf=\\\"accstar?.errors.min\\\">Accommodated start date must be today or later.</div>\\n                        </div>\\n                      </div>\\n                      \\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"appRent\\\" class=\\\"text-heading\\\">Approx rent/Month ?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\"  name=\\\"appren\\\"\\n                        [(ngModel)]=\\\"appRent\\\" #appren=\\\"ngModel\\\" min=\\\"0\\\" required (keydown)=\\\"restrictNegativeValues($event)\\\"> \\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"appren?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"appren?.errors['required']\\\">Approx rent is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"parkingAvail\\\" class=\\\"text-heading\\\">Parking available ?*</label>\\n                        <select class=\\\"form-select\\\" aria-label=\\\"Default select example\\\" [(ngModel)]=\\\"parkingAvail\\\" \\n                        >\\n                            <option value=\\\"\\\" disabled selected>Select</option>\\n                            <option value=\\\"Yes\\\">Yes</option>\\n                            <option value=\\\"No\\\">No</option>\\n                        </select>\\n                        \\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4 \\\">\\n                        <label for=\\\"petFriendly\\\" class=\\\"text-heading\\\">Pet friendly ?*</label>\\n                        <select class=\\\"form-select\\\" aria-label=\\\"Default select example\\\" [(ngModel)]=\\\"petFriendly\\\" >\\n                            <option value=\\\"\\\" disabled selected>Select</option>\\n                            <option value=\\\"Yes\\\">Yes</option>\\n                            <option value=\\\"No\\\">No</option>\\n                        </select>\\n                        \\n                    </div>\\n                </div>\\n                \\n            \\n                <hr>\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"Address\\\" class=\\\"text-heading\\\">Address*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" id=\\\"address\\\" name=\\\"addre\\\"\\n                        [(ngModel)]=\\\"address\\\"  #addre=\\\"ngModel\\\" required>\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"addre?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"addre?.errors['required']\\\">Address is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"City\\\" class=\\\"text-heading\\\">City*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" name=\\\"cit\\\"\\n                        [(ngModel)]=\\\"city\\\"  #cit=\\\"ngModel\\\" required>\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"cit?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"cit?.errors['required']\\\">City is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"State\\\" class=\\\"text-heading\\\">State*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" name=\\\"stat\\\"\\n                        [(ngModel)]=\\\"state\\\"  #stat=\\\"ngModel\\\" required>\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"stat?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"stat?.errors['required']\\\">State is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"Country\\\" class=\\\"text-heading\\\">Country*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\"  name=\\\"countr\\\"\\n                        [(ngModel)]=\\\"country\\\"  #countr=\\\"ngModel\\\" required>\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"countr?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"countr?.errors['required']\\\">Country is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"zipCode\\\" class=\\\"text-heading\\\">Zip Code*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\"  name=\\\"zipcod\\\"\\n                        [(ngModel)]=\\\"zipcode\\\"  #zipcod=\\\"ngModel\\\" min=\\\"0\\\" required (keydown)=\\\"restrictNegativeValues($event)\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"zipcod?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"zipcod?.errors['required']\\\">ZipCode is required</div>\\n                        </div>\\n                    </div>\\n                    \\n                </div>\\n\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-12 px-4 mb-md-0\\\">\\n                        <label for=\\\"zipCode\\\" class=\\\"text-heading\\\">Description</label>\\n                        <textarea id=\\\"description\\\"  class=\\\"form-control form-control-md\\\" \\n                        name=\\\"descriptio\\\" placeholder=\\\"You can add details related to property\\\" [(ngModel)]=\\\"description\\\" #descriptio=\\\"\\\"ngModel rows=\\\"4\\\" cols=\\\"60\\\"></textarea>\\n                   </div>\\n                </div> \\n                 <br>      \\n                <div class=\\\"d-flex justify-content-end flex-wrap\\\">\\n                    <!-- <button class=\\\"btn btn-primary mr-0\\\" [disabled]=\\\"nf.invalid\\\">Submit</button> -->\\n                    <button class=\\\"btn btn-primary mr-0\\\" >Submit</button>\\n                 </div>\\n              </form>\\n            </div>\\n            \\n        </div>\\n    </sb-card>\\n</sb-layout-dashboard>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJuZXdwcm9wZXJ0eS5jb21wb25lbnQuc2NzcyJ9 */\";","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule, DecimalPipe } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n/* Containers */\nimport * as newpropertyContainers from './containers';\n\n/* Services */\nimport * as newpropertyServices from './services';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n    ],\n    providers: [DecimalPipe, ...newpropertyServices.services],\n    declarations: [...newpropertyContainers.containers],\n    exports: [...newpropertyContainers.containers],\n})\nexport class NewpropertyModule {}\n","import { DatePipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { newpropertyService } from '../../services/newproperty.service';\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\n\n@Component({\n    selector: 'sb-newproperty',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './newproperty.component.html',\n    styleUrls: ['newproperty.component.scss'],\n})\nexport class NewpropertyComponent implements OnInit {\n\n  posting_id :any;\n  rentallisting: any;\n\n  restrictNegativeValues(event: any): void {\n    if (event.key === '-' || event.key === '+') {\n      event.preventDefault();\n    }\n  }\n\n\n    form = {\n        \"user_name\": \"string\",\n        \"accomedation_type\": \"Temporary\",\n        \"name\": \"string\",\n        \"available_date\": \"2022-11-23\",\n        \"num_days\": 7,\n        \"accomedated_date\": \"2022-11-24\",\n        \"num_people\": 1,\n        \"num_people_living\": 2,\n        \"num_bedrooms\": 1,\n        \"num_bathrooms\": 1,\n        \"approx_rent\": 200,\n        \"is_pet_friendly\": false,\n        \"parking_available\": false,\n          \"address\": \"string\",\n          \"address1\": \"string\",\n          \"address2\": \"string\",\n          \"address3\": \"string\",\n          \"city\": \"string\",\n          \"state\": \"string\",\n          \"country\": \"string\",\n          \"zipcode\": 0,\n        \"description\": \"any\"\n      };\n    localStorage: any;\n    user_name:any = localStorage.getItem(\"user_name\");\n    accomdationtype: any;\n    propDesc:any;\n    numpeople:any;\n    numpeopleneed:any;\n    numRooms:any;\n    numDays:any;\n    numBaths:any;\n    accomStart: any;\n    appRent:any;\n    parkingAvail:any;\n    petFriendly:any;\n    address:any;\n    city:any;\n    state:any;\n    country:any;\n    zipcode:any;\n    name: any;\n    description: any;\n    constructor( private newpropertyService : newpropertyService, private datePipe: DatePipe, private route: ActivatedRoute) {\n      \n    }\n    ngOnInit() {\n      this.posting_id = this.route.snapshot.params.id;\n      this.newpropertyService.getUserrental(this.posting_id,this.user_name).subscribe((data: any) => {\n        this.rentallisting = data;\n        console.log(this.rentallisting, \"user listing detils\");\n        \n    });\n    }\n    getCurrentDate(): string {\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = (today.getMonth() + 1).toString().padStart(2, '0');\n      const day = today.getDate().toString().padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    }\n    onSubmit(): void {\n        this.form = {\n            \"user_name\": this.user_name,\n            \"name\": this.name,\n            \"accomedation_type\": this.accomdationtype,\n            \"available_date\": this.accomStart,\n            \"num_days\": this.numDays,\n            \"accomedated_date\": this.accomStart,\n            \"num_people\": this.numpeople,\n            \"num_people_living\": this.numpeopleneed,\n            \"num_bedrooms\": this.numRooms,\n            \"num_bathrooms\": this.numBaths,\n            \"approx_rent\": this.appRent,\n            \"is_pet_friendly\": this.petFriendly,\n            \"parking_available\": this.parkingAvail,\n              \"address\": \"string\",\n              \"address1\": this.address,\n              \"address2\": \"\",\n              \"address3\": \"\",\n              \"city\": this.city,\n              \"state\": this.state,\n              \"country\": this.country,\n              \"zipcode\": this.zipcode,\n            \"description\":this.description,\n          };\n        \n            this.newpropertyService.postPropertydetails(this.form).subscribe({ \n                next: postingproperty => { console.log(postingproperty, \"postingproperty\");}\n            });\n\n            alert(\"New property details added successfully\")\n    }\n}\n\n\nexport interface User{\n  accomedated_date: any,\n  accomedation_type: any,\n  address1: string,\n  approx_rent: any,\n  available_date: any,\n  city: string,\n  country: string,\n  description: string,\n  email: string,\n  first_name: string,\n  is_pet_friendly: any,\n  last_name: string,\n  name: string,\n  num_bathrooms: string,\n  num_bedrooms: string,\n  num_days: string,\n  num_people: string,\n  num_people_living: string,\n  parking_available: any,\n  posting_id: any,\n  state: string,\n  user_name: string,\n  zipcode: any,\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport {environment} from 'environments/environment';\n\n// const API_URL = 'http://18.207.93.25:5000/api';\n\n// const API_URL  = 'http://192.168.1.23:5000/api';\n\n\n@Injectable()\nexport class newpropertyService {\n    constructor(private http: HttpClient) { }\n  \n    postPropertydetails(formdetails:any): Observable<any> {\n    //   return this.http.post(API_URL + '/user-posting', { responseType: 'text' });\n      return this.http.post<any>(environment.basePath + \"/user-posting\", formdetails);\n\n    }\n\n    getUserrental(rental_id:any, user_name:any): Observable<any> {\n      return this.http.get(environment.basePath + '/user-posting/' + user_name + '/postings/' + rental_id ) \n      \n    }\n}\n","import { NewpropertyComponent } from './newproperty/newproperty.component';\n\nexport const containers = [NewpropertyComponent];\n\nexport * from './newproperty/newproperty.component';\n","import { newpropertyService } from './newproperty.service';\n\nexport const services = [newpropertyService];\n\nexport * from './newproperty.service';\n"]}