{"version":3,"sources":["./src/modules/auth/components/index.ts","./src/modules/auth/containers/login/login.component.ts","./src/modules/auth/containers/register/register.component.html","./src/modules/auth/containers/login/login.component.scss","./src/modules/auth/auth-routing.module.ts","./src/modules/auth/containers/register/register.component.scss","./src/modules/auth/auth.module.ts","./src/modules/auth/containers/register/register.component.ts","./src/modules/auth/containers/index.ts","./src/modules/auth/containers/login/login.component.html","./src/modules/auth/containers/forgot-password/forgot-password.component.html","./src/modules/auth/containers/forgot-password/forgot-password.component.scss","./src/modules/auth/containers/forgot-password/forgot-password.component.ts"],"names":[],"mappings":"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","file":"modules-auth-auth-routing-module-es2015.js","sourcesContent":["export const components = [];\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from '../../../auth/services/auth.service';\r\nimport { TokenStorageService } from '../../../auth/services/token-storage.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n    selector: 'sb-login',\r\n    changeDetection: ChangeDetectionStrategy.Default,\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    form: any = {\r\n        username: null,\r\n        password: null,\r\n    };\r\n    isLoggedIn = false;\r\n    isLoginFailed = false;\r\n    errorMessage = '';\r\n    access_token:any;\r\n  \r\n    constructor(private authService: AuthService, private tokenStorage: TokenStorageService,private myRoute: Router) { }\r\n  \r\n    ngOnInit(): void {\r\n      \r\n    }\r\n\r\n    \r\n  \r\n    onSubmit(): void {\r\n      const { username, password } = this.form;\r\n  \r\n      this.authService.login(username, password).subscribe({\r\n        next: data => {\r\n          data && data.access_token &&  this.tokenStorage.setToken('access_token',data.access_token);\r\n          data && data.refresh_token && this.tokenStorage.setToken('refresh_token',data.refresh_token);\r\n          \r\n          this.tokenStorage.saveToken(data.accessToken);\r\n          this.tokenStorage.saveUser(data);\r\n  \r\n          this.isLoginFailed = false;\r\n          this.isLoggedIn = true;\r\n          console.log(data.access_token , \"access token1\")\r\n          console.log(data.refresh_token)\r\n          localStorage.setItem('access_token',this.access_token);\r\n          console.log(data.access_token , \"access token1\")\r\n          this.getdetails(username);\r\n          this.myRoute.navigateByUrl('dashboard');\r\n\r\n          if (this.tokenStorage.getToken('access_token')) {\r\n        this.isLoggedIn = true;\r\n        console.log('sdf');  \r\n        console.log(this.tokenStorage.getToken('access_token'));\r\n      }\r\n        },\r\n        \r\n        error: err => {\r\n          this.errorMessage = err.error.detail;\r\n          this.isLoginFailed = true;\r\n        }\r\n      });\r\n    }\r\n    getdetails(username:any){\r\n      this.authService.getUserDetails(username).subscribe({\r\n            next: data1 => { console.log(data1, \"dgdfg\");\r\n            localStorage.setItem('email',data1.email); \r\n            localStorage.setItem('first_name',data1.first_name); \r\n            localStorage.setItem('last_name',data1.last_name); \r\n            localStorage.setItem('user_name',data1.user_name); \r\n            localStorage.setItem('sid',data1.sid); \r\n            localStorage.setItem('access_token',data1.access_token); \r\n          }\r\n          });\r\n    }\r\n  }\r\n","export default \"<sb-layout-auth>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-6 bg\\\">\\n                <img alt=\\\"My image\\\" src=\\\"../../../../assets/img/banner.png\\\">\\n              </div>\\n            <div class=\\\"col-lg-6\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                    <div class=\\\"card-header\\\"><h3 class=\\\"text-center font-weight-light my-4\\\">Create Account</h3></div>\\n                    <div class=\\\"card-body\\\">\\n                        <form *ngIf=\\\"!isSuccessful\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\">\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label for=\\\"username\\\">Username</label>\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" required minlength=\\\"3\\\"\\n                                    maxlength=\\\"20\\\" #username=\\\"ngModel\\\" placeholder=\\\"sam@gmail.com\\\"/>\\n                                  <div class=\\\"alert-danger\\\" *ngIf=\\\"username.errors && f.submitted\\\">\\n                                    <div *ngIf=\\\"username.errors['required']\\\">Username is required*</div>\\n                                    <div *ngIf=\\\"username.errors['minlength']\\\">\\n                                      Username must be at least 3 characters\\n                                    </div>\\n                                    <div *ngIf=\\\"username.errors['maxlength']\\\">\\n                                      Username must be at most 20 characters\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label for=\\\"sid\\\">SID(Dont have one please leave it)</label>\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"sid\\\" [(ngModel)]=\\\"form.sid\\\"  minlength=\\\"6\\\"\\n                                     #sid=\\\"ngModel\\\" pattern=\\\"^[a-zA-Z][0-9]{6}$\\\" placeholder=\\\"If u dont have one please leave it empty\\\" data-toggle=\\\"tooltip\\\" title=\\\"If u dont have SID please leave it empty\\\"/>\\n                                  <div class=\\\"alert-danger\\\" *ngIf=\\\"sid.errors && f.submitted\\\">\\n                                    <div *ngIf=\\\"sid.errors['required']\\\">SID is required</div>\\n                                    <div *ngIf=\\\"sid.errors['minlength']\\\">\\n                                      sid must be at least 6 characters \\n                                    </div>\\n                                    <div *ngIf=\\\"sid.errors?.pattern\\\">\\n                                      sid is invalid format is (S12345)\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                    \\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label for=\\\"firstname\\\">FirstName*</label>\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstname\\\" [(ngModel)]=\\\"form.firstname\\\" required\\n                                    minlength=\\\"3\\\" maxlength=\\\"20\\\" #firstname=\\\"ngModel\\\" placeholder=\\\"Firstname\\\"/>\\n                                  <div class=\\\"alert-danger\\\" *ngIf=\\\"firstname.errors && f.submitted\\\">\\n                                    <div *ngIf=\\\"firstname.errors['required']\\\">Firstname is required</div>\\n                                    <div *ngIf=\\\"firstname.errors['minlength']\\\">\\n                                      Firstname must be at least 3 characters\\n                                    </div>\\n                                    <div *ngIf=\\\"firstname.errors['maxlength']\\\">\\n                                      Firstname must be at most 20 characters\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label for=\\\"lastname\\\">LastName*</label>\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastname\\\" [(ngModel)]=\\\"form.lastname\\\" required minlength=\\\"3\\\"\\n                                    maxlength=\\\"20\\\" #lastname=\\\"ngModel\\\" placeholder=\\\"Lastname\\\"/>\\n                                  <div class=\\\"alert-danger\\\" *ngIf=\\\"lastname.errors && f.submitted\\\">\\n                                    <div *ngIf=\\\"lastname.errors['required']\\\">Lastname is required</div>\\n                                    <div *ngIf=\\\"lastname.errors['minlength']\\\">\\n                                      Lastname must be at least 3 characters\\n                                    </div>\\n                                    <div *ngIf=\\\"lastname.errors['maxlength']\\\">\\n                                      Lastname must be at most 20 characters\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-12\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label for=\\\"email\\\">Email*</label>\\n                                  <input type=\\\"email\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.email\\\" required email\\n                                    #email=\\\"ngModel\\\" placeholder=\\\"someone@gmail.com\\\"/>\\n                                  <div class=\\\"alert-danger\\\" *ngIf=\\\"email.errors && f.submitted\\\">\\n                                    <div *ngIf=\\\"email.errors['required']\\\">Email is required</div>\\n                                    <div *ngIf=\\\"email.errors['email']\\\">\\n                                      Email must be a valid email address\\n                                    </div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                            \\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label for=\\\"password\\\">Password*</label>\\n                                  <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" required minlength=\\\"6\\\" #password=\\\"ngModel\\\" placeholder=\\\"xxx\\\"/>\\n                                  <div class=\\\"alert-danger\\\" *ngIf=\\\"password.errors && f.submitted\\\">\\n                                    <div *ngIf=\\\"password.errors['required']\\\">Password is required</div>\\n                                    <div *ngIf=\\\"password.errors['minlength']\\\">Password must be at least 6 characters</div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                              <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                  <label for=\\\"cpassword\\\">Confirm Password*</label>\\n                                  <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"cpassword\\\" [(ngModel)]=\\\"form.cpassword\\\" required minlength=\\\"6\\\" #cpassword=\\\"ngModel\\\" compareWith=\\\"password\\\" placeholder=\\\"xxx\\\"/>\\n                                  <div class=\\\"alert-danger\\\" *ngIf=\\\"cpassword.errors && f.submitted\\\">\\n                                    <div *ngIf=\\\"cpassword.errors['required']\\\">Confirm password is required</div>\\n                                    <div *ngIf=\\\"cpassword.errors['minlength']\\\">Confirm password must be at least 6 characters</div>\\n                                    <div *ngIf=\\\"cpassword.errors['compareWith']\\\">Passwords do not match</div>\\n                                  </div>\\n                                </div>\\n                              </div>\\n                            </div>\\n                             \\n                            <div class=\\\"form-group\\\">\\n                              <button class=\\\"btn btn-block btn-outline-primary \\\" >Sign Up</button>\\n                            </div>\\n                    \\n                            <div class=\\\"alert alert-warning\\\" *ngIf=\\\"f.submitted && isSignUpFailed\\\">\\n                              Signup failed!<br />{{ errorMessage }}\\n                            </div>\\n                          </form>\\n                          <div class=\\\"alert alert-success\\\" *ngIf=\\\"isSuccessful\\\">\\n                            Your registration is successful!\\n                          </div>\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <div class=\\\"small\\\"><a routerLink=\\\"/auth/login\\\">Have an account ? Go to login</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\";","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SBRouteData } from '@modules/navigation/models';\n\n/* Module */\nimport { AuthModule } from './auth.module';\n\n/* Containers */\nimport * as authContainers from './containers';\n\n/* Guards */\nimport * as authGuards from './guards';\nimport { AuthGuard } from './guards';\n\n/* Routes */\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        canActivate:[AuthGuard],\n        pathMatch: 'full',\n        redirectTo: 'login',\n    },\n    {\n        path: 'login',\n        canActivate: [],\n        component: authContainers.LoginComponent,\n        data: {\n            title: 'Pages Login - Bearcat Resident Connect',\n        } as SBRouteData,\n    },\n    {\n        path: 'register',\n        canActivate: [],\n        component: authContainers.RegisterComponent,\n        data: {\n            title: 'Pages Register - Bearcat Resident Connect',\n        } as SBRouteData,\n    },\n    {\n        path: 'forgot-password',\n        canActivate: [AuthGuard],\n        component: authContainers.ForgotPasswordComponent,\n        data: {\n            title: 'Pages Forgot Password - Bearcat Resident Connect',\n        } as SBRouteData,\n    },\n];\n\n@NgModule({\n    imports: [AuthModule, RouterModule.forChild(ROUTES)],\n    exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuc2NzcyJ9 */\";","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n/* Components */\nimport * as authComponents from './components';\n\n/* Containers */\nimport * as authContainers from './containers';\n\n/* Guards */\nimport * as authGuards from './guards';\n\n/* Services */\nimport * as authServices from './services';\nimport { AuthGuard } from './guards';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n    ],\n    providers: [...authServices.services, ...authGuards.guards, AuthGuard],\n    declarations: [...authContainers.containers, ...authComponents.components],\n    exports: [...authContainers.containers, ...authComponents.components],\n})\nexport class AuthModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from '../../../auth/services/auth.service';\n@Component({\n    selector: 'sb-register',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './register.component.html',\n    styleUrls: ['register.component.scss'],\n})\nexport class RegisterComponent implements OnInit {\n    form: any = {\n        username: null,\n        sid: null,\n        firstname: null,\n        lastname: null,\n        email: null,\n        password: null,\n    };\n    isSuccessful = false;\n    isSignUpFailed = false;\n    errorMessage = '';\n    password: string | any;\n    cpassword: string | any;\n    \n    constructor(private authService: AuthService) {}\n\n    ngOnInit(): void {}\n\n    onSubmit(): void {\n        const { username, sid, firstname, lastname, email, password } = this.form;\n\n        this.authService.register(username, sid, firstname, lastname, email, password).subscribe({\n            next: (data: any) => {\n                console.log(data);\n                this.isSuccessful = true;\n                this.isSignUpFailed = false;\n            },\n            error: (err: { error: { message: string } }) => {\n                this.errorMessage = err.error.message;\n                this.isSignUpFailed = true;\n            },\n        });\n    }\n\n    comparePasswords(form: NgForm) {\n        if (form.controls['password'].value !== form.controls['cpassword'].value) {\n          form.controls['cpassword'].setErrors({ compareWith: true });\n        } else {\n          form.controls['cpassword'].setErrors(null);\n        }\n      }\n}\n","import { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nexport const containers = [LoginComponent, RegisterComponent, ForgotPasswordComponent];\n\nexport * from './login/login.component';\nexport * from './register/register.component';\nexport * from './forgot-password/forgot-password.component';\n","export default \"<sb-layout-auth\\n    ><div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-md-6 bg\\\">\\n                <img alt=\\\"My image\\\" src=\\\"../../../../assets/img/banner.png\\\">\\n              </div>\\n            <div class=\\\"col-lg-6\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                    <div class=\\\"card-header\\\"><h3 class=\\\"text-center font-weight-light my-4\\\">Login</h3></div>\\n                    <div class=\\\"card-body\\\">\\n                        <form *ngIf=\\\"!isLoggedIn\\\" name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n                            <div class=\\\"form-group\\\">\\n                              <label for=\\\"username\\\">Username</label>\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" required\\n                                #username=\\\"ngModel\\\" />\\n                              <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"username.errors && f.submitted\\\">\\n                                Username is required!\\n                              </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                              <label for=\\\"password\\\">Password</label>\\n                              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" required\\n                                minlength=\\\"6\\\" #password=\\\"ngModel\\\" />\\n                              <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"password.errors && f.submitted\\\">\\n                                <div *ngIf=\\\"password.errors['required']\\\">Password is required</div>\\n                                <div *ngIf=\\\"password.errors['minlength']\\\">\\n                                  Password must be at least 6 characters\\n                                </div>\\n                              </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                              <button class=\\\"btn btn-block btn-outline-primary\\\" >\\n                                Login\\n                              </button>\\n                              <!-- <button class=\\\"btn btn-block btn-outline-primary\\\" [disabled]=\\\"f.invalid\\\">\\n                                Login\\n                              </button> -->\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                              <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"errorMessage\\\">\\n                                Login failed: {{ errorMessage }}\\n                              </div>\\n                            </div>\\n                          </form>\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <div class=\\\"small\\\"><a routerLink=\\\"/auth/register\\\">Need an account? Sign up!</a></div>\\n                    </div>\\n                    <!-- <div class=\\\"card-footer text-center\\\">\\n                      <div class=\\\"small\\\"><a routerLink=\\\"http://3.224.253.213:5000/api/user/reset_password\\\">Change password!</a></div>\\n                  </div> -->\\n                </div>\\n            </div>\\n        </div>\\n    </div></sb-layout-auth>\\n\";","export default \"<sb-layout-auth>\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n            <div class=\\\"col-lg-5\\\">\\n                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                    <div class=\\\"card-header\\\"><h3 class=\\\"text-center font-weight-light my-4\\\">Password Recovery</h3></div>\\n                    <div class=\\\"card-body\\\">\\n                        <div class=\\\"small mb-3 text-muted\\\">Enter your email address and we will send you a link to reset your password.</div>\\n                        <form>\\n                            <div class=\\\"form-group\\\"><label class=\\\"small mb-1\\\" for=\\\"inputEmailAddress\\\">Email</label><input class=\\\"form-control py-4\\\" id=\\\"inputEmailAddress\\\" type=\\\"email\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter email address\\\" /></div>\\n                            <div class=\\\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\\\"><a class=\\\"small\\\" routerLink=\\\"/auth/login\\\">Return to login</a><a class=\\\"btn btn-primary\\\" routerLink=\\\"/auth/login\\\">Reset Password</a></div>\\n                        </form>\\n                    </div>\\n                    <div class=\\\"card-footer text-center\\\">\\n                        <div class=\\\"small\\\"><a routerLink=\\\"/auth/register\\\">Need an account? Sign up!</a></div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</sb-layout-auth>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3Jnb3QtcGFzc3dvcmQuY29tcG9uZW50LnNjc3MifQ== */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'sb-forgot-password',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './forgot-password.component.html',\n    styleUrls: ['forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n    constructor() {}\n    ngOnInit() {}\n}\n"],"sourceRoot":"webpack:///"}