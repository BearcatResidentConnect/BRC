{"version":3,"sources":["./src/modules/updnewproperty/services/index.ts","./src/modules/updnewproperty/services/updnewproperty.service.ts","./src/modules/updnewproperty/containers/updnewproperty/updnewproperty.component.ts","./src/modules/updnewproperty/updnewproperty.module.ts","./src/modules/updnewproperty/updnewproperty-routing.module.ts","./src/modules/updnewproperty/containers/updnewproperty/updnewproperty.component.scss","./src/modules/updnewproperty/containers/updnewproperty/updnewproperty.component.html","./src/modules/updnewproperty/containers/index.ts"],"names":[],"mappings":"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","file":"modules-updnewproperty-updnewproperty-routing-module-es2015.js","sourcesContent":["import { updnewpropertyService } from './updnewproperty.service';\n\nexport const services = [updnewpropertyService];\n\nexport * from './updnewproperty.service';\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport {environment} from 'environments/environment';\n\n// const API_URL = 'http://18.207.93.25:5000/api';\n\n// const API_URL  = 'http://192.168.1.23:5000/api';\n\n\n@Injectable()\nexport class updnewpropertyService {\n    constructor(private http: HttpClient) { }\n  \n    updatePropertydetails(formdetails:any): Observable<any> {\n    //   return this.http.post(API_URL + '/user-posting', { responseType: 'text' });\n      return this.http.put(environment.basePath + '/user-posting', formdetails);\n\n    }\n\n    getUserrental(rental_id:any): Observable<any> {\n      return this.http.get(environment.basePath + '/user-posting' + '/postings/' + rental_id ) \n      \n    }\n\n\n}\n","import { DatePipe } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { updnewpropertyService } from '../../services/updnewproperty.service';\n\nimport { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n    selector: 'sb-updnewproperty',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './updnewproperty.component.html',\n    styleUrls: ['updnewproperty.component.scss'],\n})\nexport class UpdnewpropertyComponent implements OnInit {\n\n  @ViewChild('nf', { static: false }) nf!: NgForm;\n\n  restrictNegativeValues(event: KeyboardEvent) {\n    if (event.key === '-' || event.key === '+') {\n      event.preventDefault();\n    }\n  }\n\n  rentallisting: any;\n\n    form = {\n        \"user_name\": \"string\",\n        \"accomedation_type\": \"string\",\n        \"name\": \"string\",\n        \"available_date\": \"any\",\n        \"num_days\": \"any\",\n        \"accomedated_date\": \"any\",\n        \"num_people\": \"any\",\n        \"num_people_living\":\"any\",\n        \"num_bedrooms\": \"any\",\n        \"num_bathrooms\": \"any\",\n        \"approx_rent\": \"any\",\n        \"is_pet_friendly\": \"any\",\n        \"parking_available\": \"any\",\n        \"address\": \"string\",\n          \"address1\": \"string\",\n          \"address2\": \"string\",\n          \"address3\": \"string\",\n          \"city\": \"string\",\n          \"state\": \"string\",\n          \"country\": \"string\",\n          \"zipcode\": \"any\",\n          \"description\": \"any\"\n      };\n    localStorage: any;\n    user_name:any = \"\";\n    posting_id:any = localStorage.getItem(\"posting_id\")\n    accomedation_type: any;\n    available_date:any;\n    accomedated_date:any;\n    propDesc:any;\n    num_people:any;\n    numpeopleneed:any;\n    numRooms:any;\n    numDays:any;\n    numBaths:any;\n    accomStart: any;\n    appRent:any;\n    parking_available:any;\n    petFriendly:any;\n    address:any;\n    city:any;\n    state:any;\n    country:any;\n    zipcode:any;\n    name: any;\n    description: any;\n    constructor( private updnewpropertyService : updnewpropertyService, private datePipe: DatePipe, private route: ActivatedRoute,private router: Router) {}\n    ngOnInit() {\n      this.posting_id = this.route.snapshot.params.id;\n      this.updnewpropertyService.getUserrental(this.posting_id).subscribe((data: any) => {\n        this.rentallisting = data;\n        console.log(this.rentallisting, \"user listing detils\");\n    });\n    }\n\n    getCurrentDate(): string {\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = (today.getMonth() + 1).toString().padStart(2, '0');\n      const day = today.getDate().toString().padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    }\n    \n    onSubmit(): void {\n        this.form = {\n            \"user_name\": this.user_name,\n            \"name\": this.name,\n            \"accomedation_type\": this.accomedation_type,\n            \"available_date\": this.available_date,\n            \"num_days\": this.numDays,\n            \"accomedated_date\": this.accomedated_date,\n            \"num_people\": this.num_people,\n            \"num_people_living\": this.numpeopleneed,\n            \"num_bedrooms\": this.numRooms,\n            \"num_bathrooms\": this.numBaths,\n            \"approx_rent\": this.appRent,\n            \"is_pet_friendly\": this.petFriendly,\n            \"parking_available\": this.parking_available,\n             \"address\": this.address,\n              \"address1\": \"\",\n              \"address2\": \"\",\n              \"address3\": \"\",\n              \"city\": this.city,\n              \"state\": this.state,\n              \"country\": this.country,\n              \"zipcode\": this.zipcode,\n            \"description\":this.description,\n          };\n\n          if (this.nf.form.valid) {\n            this.updnewpropertyService.updatePropertydetails(this.rentallisting).subscribe({ \n              next: postingproperty => { console.log(postingproperty, \"updatingproperty\");}\n            });\n            if (this.isFormDirty()) {\n                this.router.navigate([`myuserlistings`]);\n                alert(\"Property details updated successfully\");\n            }\n            else {\n              alert(\"No changes made to property details\");\n          }\n        }\n        \n    }\n\n    isFormDirty(): boolean {\n      return Object.values(this.nf.form.controls).some(control => control.dirty);\n    }\n}\n\n\n\nexport interface User{\n  accomedated_date: any,\n  accomedation_type: any,\n  address1: string,\n  approx_rent: any,\n  available_date: any,\n  city: string,\n  country: string,\n  description: string,\n  email: string,\n  is_pet_friendly: boolean,\n  name: string,\n  num_bathrooms: string,\n  num_bedrooms: string,\n  num_days: string,\n  num_people: string,\n  num_people_living: string,\n  parking_available: boolean,\n  posting_id: any,\n  state: string,\n  user_name: string,\n  zipcode: any,\n\n}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule, DecimalPipe } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n/* Containers */\nimport * as updnewpropertyContainers from './containers';\n\n/* Services */\nimport * as updnewpropertyServices from './services';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n    ],\n    providers: [DecimalPipe, ...updnewpropertyServices.services],\n    declarations: [...updnewpropertyContainers.containers],\n    exports: [...updnewpropertyContainers.containers],\n})\nexport class UpdnewpropertyModule {}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n/* Module */\nimport { UpdnewpropertyModule } from './updnewproperty.module';\n\n/* Containers */\nimport * as updnewpropertyContainers from './containers';\n\nimport { SBRouteData } from '@modules/navigation/models';\n\n/* Routes */\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        canActivate: [],\n        component: updnewpropertyContainers.UpdnewpropertyComponent,\n        data: {\n            title: 'New Property',\n            breadcrumbs: [\n                {\n                    text: 'Dashboard',\n                    link: '/dashboard',\n                },\n                {\n                    text: 'Update property',\n                    active: true,\n                },\n            ],\n        } as SBRouteData,\n    },\n];\n\n@NgModule({\n    imports: [UpdnewpropertyModule, RouterModule.forChild(ROUTES)],\n    exports: [RouterModule],\n})\nexport class UpdnewpropertyRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1cGRuZXdwcm9wZXJ0eS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<sb-layout-dashboard>\\n    <sb-dashboard-head title=\\\"Update Property\\\" [hideBreadcrumbs]=\\\"false\\\"></sb-dashboard-head>\\n    <sb-card>\\n        <div class=\\\"card-body\\\">\\n            <div class=\\\"card-body px-6 pt-6 pb-5\\\">\\n                <!-- <h3 class=\\\"card-title mb-0 text-heading fs-22 lh-15\\\">Add new property</h3> -->\\n                <!-- <p class=\\\"card-text\\\">You can update details</p> -->\\n               <form *ngIf=\\\"!isSuccessful\\\" name=\\\"form\\\" (ngSubmit)=\\\"nf.form.valid && onSubmit()\\\" #nf=\\\"ngForm\\\">\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"name\\\" class=\\\"text-heading\\\">Property name*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" required #nam=\\\"ngModel\\\" name=\\\"nam\\\" \\n                        [(ngModel)]=\\\"rentallisting.name\\\"    minlength=\\\"3\\\" maxlength=\\\"30\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"nam.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"nam.errors['required']\\\">Property Name is required</div>\\n                            <div *ngIf=\\\"nam.errors['minlength']\\\">\\n                                Property must be at least 3 characters\\n                            </div>\\n                            <div *ngIf=\\\"nam.errors['maxlength']\\\">\\n                                Property must be at most 20 characters\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"accomtype\\\" class=\\\"text-heading\\\">Accomedation Type*</label>\\n                        <!-- <select class=\\\"form-select\\\" aria-label=\\\"Default select example\\\" required #accomtype=\\\"ngModel\\\" id=\\\"accomtype\\\" name=\\\"accomtype\\\"\\n                                [(ngModel)]=\\\"accomdationtype\\\" onchange=\\\"if (this.selectedIndex==1){this.form['numdays'].style.visibility='visible'}else {this.form['numdays'].style.visibility='hidden'};\\\"> -->\\n                        <select class=\\\"form-select\\\" aria-label=\\\"Default select example\\\" required #accomtype=\\\"ngModel\\\" id=\\\"accomtype\\\" name=\\\"accomtype\\\"\\n                                [(ngModel)]=\\\"rentallisting.accomedation_type\\\" >\\n                            <option value=\\\"\\\" disabled selected>Select</option>\\n                            <option value=\\\"Temporary\\\">Temporary</option>\\n                            <option value=\\\"Permanent\\\">Permanent</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"numppl\\\" class=\\\"text-heading\\\">Num people Currently living?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" id=\\\"numppl\\\" name=\\\"numppl\\\"\\n                        [(ngModel)]=\\\"rentallisting.num_people_living\\\" min=\\\"0\\\"  #numppl=\\\"ngModel\\\" required (keydown)=\\\"restrictNegativeValues($event)\\\" maxlength=\\\"10\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"numppl?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"numppl?.errors['required']\\\">Number People Currently living is required</div>\\n                            <div *ngIf=\\\"numppl?.errors['maxlength']\\\">Number People Currently living is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"numppln\\\" class=\\\"text-heading\\\">Num people can accommodate?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" id=\\\"numppln\\\" name=\\\"numppln\\\"\\n                        [(ngModel)]=\\\"rentallisting.num_people\\\"  min=\\\"0\\\" #numppln=\\\"ngModel\\\" required (keydown)=\\\"restrictNegativeValues($event)\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"numppln?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"numppln?.errors['required']\\\">Number People needs accomdation is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"mobile\\\" class=\\\"text-heading\\\">Num of Bedrooms?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" id=\\\"numRooms\\\" name=\\\"numRom\\\"\\n                        [(ngModel)]=\\\"rentallisting.num_bedrooms\\\" min=\\\"0\\\"  #numRom=\\\"ngModel\\\" required (keydown)=\\\"restrictNegativeValues($event)\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"numRom?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"numRom?.errors['required']\\\">Number of bedrooms is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\" >\\n                        <label for=\\\"email\\\" class=\\\"text-heading\\\">Num of days?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" name=\\\"numdays\\\" \\n                        [(ngModel)]=\\\"rentallisting.num_days\\\" min=\\\"0\\\"  #numdays=\\\"ngModel\\\" required (keydown)=\\\"restrictNegativeValues($event)\\\">\\n                        <!-- <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" name=\\\"numdays\\\" \\n                        [(ngModel)]=\\\"numDays\\\"   #numdays=\\\"ngModel\\\" style=\\\"visibility:hidden;\\\"> -->\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"numdays?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"numdays?.errors['required']\\\">Number days is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4\\\">\\n                        <label for=\\\"mobile\\\" class=\\\"text-heading\\\">Num Of baths?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\" id=\\\"numbat\\\" name=\\\"numbat\\\"\\n                        [(ngModel)]=\\\"rentallisting.num_bathrooms\\\"  min=\\\"0\\\" #numbat=\\\"ngModel\\\" required (keydown)=\\\"restrictNegativeValues($event)\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"numbat?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"numbat?.errors['required']\\\">Number baths is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"accomStart\\\" class=\\\"text-heading\\\">Accomedated start date?*</label>\\n                        <input type=\\\"date\\\" class=\\\"form-control form-control-md\\\"  name=\\\"accstar\\\"\\n                        [(ngModel)]=\\\"rentallisting.available_date\\\"   #accstar=\\\"ngModel\\\" required min=\\\"{{getCurrentDate()}}\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"accstar?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"accstar?.errors['required']\\\">Accomedated start date is required</div>\\n                            <div *ngIf=\\\"nf.submitted && accstar?.errors?.min\\\">Accommodated start date must be today or later.</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"appRent\\\" class=\\\"text-heading\\\">Approx rent/Month ?*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\"  name=\\\"appren\\\"\\n                        [(ngModel)]=\\\"rentallisting.approx_rent\\\" min=\\\"0\\\" #appren=\\\"ngModel\\\" required (keydown)=\\\"restrictNegativeValues($event)\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"appren?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"appren?.errors['required']\\\">Approx rent is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"parkingAvail\\\" class=\\\"text-heading\\\">Parking available ?*</label>\\n                        <select class=\\\"form-select\\\" aria-label=\\\"Default select example\\\"\\n                        #parki=\\\"ngModel\\\" id=\\\"parki\\\" name=\\\"parki\\\" [(ngModel)]=\\\"rentallisting.parking_available\\\" >\\n                            <option value=\\\"\\\" disabled selected>Select</option>\\n                            <option value=\\\"true\\\">Yes</option>\\n                            <option value=\\\"false\\\">No</option>\\n                        </select>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4 \\\">\\n                        <label for=\\\"petFriendly\\\" class=\\\"text-heading\\\">Pets friendly ?*</label>\\n                        <select class=\\\"form-select\\\" aria-label=\\\"Default select example\\\" \\n                        #pet=\\\"ngModel\\\" id=\\\"pet\\\" name=\\\"pet\\\" [(ngModel)]=\\\"rentallisting.is_pet_friendly\\\" >\\n                            <option value=\\\"\\\" disabled selected>Select</option>\\n                            <option value=\\\"true\\\">Yes</option>\\n                            <option value=\\\"false\\\">No</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                \\n            \\n                <hr>\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"Address\\\" class=\\\"text-heading\\\">Address*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" id=\\\"address\\\" name=\\\"addre\\\"\\n                        [(ngModel)]=\\\"rentallisting.address1\\\"  #addre=\\\"ngModel\\\" required>\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"addre?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"addre?.errors['required']\\\">Address is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"City\\\" class=\\\"text-heading\\\">City*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" name=\\\"cit\\\"\\n                        [(ngModel)]=\\\"rentallisting.city\\\"  #cit=\\\"ngModel\\\" required>\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"cit?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"cit?.errors['required']\\\">City is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"State\\\" class=\\\"text-heading\\\">State*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" name=\\\"stat\\\"\\n                        [(ngModel)]=\\\"rentallisting.state\\\"  #stat=\\\"ngModel\\\" required>\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"stat?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"stat?.errors['required']\\\">State is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"Country\\\" class=\\\"text-heading\\\">Country*</label>\\n                        <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\"  name=\\\"countr\\\"\\n                        [(ngModel)]=\\\"rentallisting.country\\\"  #countr=\\\"ngModel\\\" required>\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"countr?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"countr?.errors['required']\\\">Country is required</div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                        <label for=\\\"zipCode\\\" class=\\\"text-heading\\\">Zip Code*</label>\\n                        <input type=\\\"number\\\" class=\\\"form-control form-control-md\\\"  name=\\\"zipcod\\\"\\n                        [(ngModel)]=\\\"rentallisting.zipcode\\\"  #zipcod=\\\"ngModel\\\" required (keydown)=\\\"restrictNegativeValues($event)\\\">\\n                        <div class=\\\"alert-danger\\\" *ngIf=\\\"zipcod?.errors && nf.submitted\\\">\\n                            <div *ngIf=\\\"zipcod?.errors['required']\\\">ZipCode is required</div>\\n                        </div>\\n                    </div>\\n                    \\n                </div>\\n\\n                <div class=\\\"form-row mx-n4\\\">\\n                    <div class=\\\"form-group col-md-12 px-4 mb-md-0\\\">\\n                        <label for=\\\"des\\\" class=\\\"text-heading\\\">Description</label>\\n                        <textarea id=\\\"description\\\"  class=\\\"form-control form-control-md\\\" \\n                        name=\\\"description\\\" [(ngModel)]=\\\"rentallisting.description\\\" rows=\\\"4\\\" cols=\\\"60\\\"></textarea>\\n                   </div>\\n                </div>  <br>      \\n                <div class=\\\"d-flex justify-content-end flex-wrap\\\">\\n                    <button class=\\\"btn btn-primary mr-0\\\" >Submit</button>\\n                 </div>\\n              </form>\\n            </div>\\n            \\n        </div>\\n    </sb-card>\\n</sb-layout-dashboard>\";","import { UpdnewpropertyComponent } from './updnewproperty/updnewproperty.component';\n\nexport const containers = [UpdnewpropertyComponent];\n\nexport * from './updnewproperty/updnewproperty.component';\n"],"sourceRoot":"webpack:///"}