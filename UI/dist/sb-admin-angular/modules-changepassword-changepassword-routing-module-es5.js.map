{"version":3,"sources":["webpack:///src/modules/changepassword/changepassword.module.ts","webpack:///src/modules/changepassword/changepassword-routing.module.ts","webpack:///src/modules/changepassword/services/index.ts","webpack:///src/modules/changepassword/containers/changepassword/changepassword.component.scss","webpack:///src/modules/changepassword/containers/changepassword/changepassword.component.ts","webpack:///src/modules/changepassword/containers/index.ts","webpack:///src/modules/changepassword/containers/changepassword/changepassword.component.html","webpack:///src/modules/changepassword/services/changepassword.service.ts"],"names":["ChangepasswordModule","imports","providers","declarations","exports","ROUTES","path","canActivate","component","data","title","breadcrumbs","text","link","active","ChangepasswordRoutingModule","forChild","services","ChangepasswordComponent","changepasswordService","username","localStorage","getItem","email","first_name","form","name","last_name","sid","postChangepassword","subscribe","userDetails","console","log","next","updateuser","alert","selector","changeDetection","OnPush","template","containers","ChangepasswordService","http","formdetails","post","basePath"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAMA;;AAIA;;AAGA;;;UAgBaA,oBAAoB;AAAA;AAAA,O;;AAApBA,0BAAoB,6DAbhC,+DAAS;AACNC,eAAO,EAAE,CACL,4DADK,EAEL,4DAFK,EAGL,kEAHK,EAIL,0DAJK,EAKL,yEALK,EAML,sFANK,CADH;AASNC,iBAAS,qBAAM,kDAAN,CATH;AAUNC,oBAAY,qBAAM,sDAAN,CAVN;AAWNC,eAAO,qBAAM,sDAAN;AAXD,OAAT,CAagC,GAApBJ,oBAAoB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7Bb;;AAKA;;AAGA;;AAGA;;;AACO,UAAMK,MAAM,GAAW,CAC1B;AACIC,YAAI,EAAE,EADV;AAEIC,mBAAW,EAAE,EAFjB;AAGIC,iBAAS,EAAE,mEAHf;AAIIC,YAAI,EAAE;AACFC,eAAK,EAAE,sBADL;AAEFC,qBAAW,EAAE,CACT;AACIC,gBAAI,EAAE,WADV;AAEIC,gBAAI,EAAE;AAFV,WADS,EAKT;AACID,gBAAI,EAAE,gBADV;AAEIE,kBAAM,EAAE;AAFZ,WALS;AAFX;AAJV,OAD0B,CAAvB;;UAyBMC,2BAA2B;AAAA;AAAA,O;;AAA3BA,iCAA2B,6DAJvC,+DAAS;AACNd,eAAO,EAAE,CAAC,2EAAD,EAAuB,6DAAae,QAAb,CAAsBX,MAAtB,CAAvB,CADH;AAEND,eAAO,EAAE,CAAC,4DAAD;AAFH,OAAT,CAIuC,GAA3BW,2BAA2B,CAA3B;;;;;;;;;;;;;;;;ACrCb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,UAAME,QAAQ,GAAG,CAAC,6EAAD,CAAjB;;;;;;;;;;;;;;;;ACFP;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCEf;;;UAOaC,uBAAuB;AAiBhC,yCAAqBC,qBAArB,EAAoE;AAAA;;AAA/C,eAAAA,qBAAA,GAAAA,qBAAA;AAZnB,eAAAC,QAAA,GAAeC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAf;AACA,eAAAC,KAAA,GAAQF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAR;AACA,eAAAE,UAAA,GAAaH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAb;AAEA,eAAAG,IAAA,GAAO;AACL,wBAAY,QADP;AAEL,4BAAgB,QAFX;AAGL,4BAAgB,QAHX;AAIL,gCAAoB;AAJf,WAAP;AAkBF,eAAAC,IAAA,GAAOL,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAP;AACA,eAAAK,SAAA,GAAYN,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAZ;AACA,eAAAM,GAAA,GAAMP,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAN;AAZsE;;AAjBtC;AAAA;AAAA,qCAkBrB;AAAA;;AAEP,iBAAKH,qBAAL,CAA2BU,kBAA3B,CAA8C,KAAKT,QAAnD,EAA6DU,SAA7D,CAAuE,UAAArB,IAAI,EAAI;AAC3E,mBAAI,CAACsB,WAAL,GAAmBtB,IAAnB;AACAuB,qBAAO,CAACC,GAAR,CAAY,KAAI,CAACF,WAAjB,EAA6B,aAA7B;AACAC,qBAAO,CAACC,GAAR,CAAY,KAAI,CAACT,UAAjB,EAA4B,YAA5B;AACD,aAJH;AAMH;AA1B+B;AAAA;AAAA,qCA+BxB;AAEA,iBAAKL,qBAAL,CAA2BU,kBAA3B,CAA8C,KAAKE,WAAnD,EAAgED,SAAhE,CAA0E;AACtEI,kBAAI,EAAE,cAAAC,UAAU,EAAI;AAAEH,uBAAO,CAACC,GAAR,CAAYE,UAAZ,EAAwB,YAAxB;AAAuC;AADS,aAA1E;AAGAC,iBAAK,CAAC,mCAAD,CAAL;AACP;AArC+B;;AAAA;AAAA,S;;;;gBAR3B;;;;AAQIlB,6BAAuB,6DANnC,gEAAU;AACPmB,gBAAQ,EAAE,mBADH;AAEPC,uBAAe,EAAE,sEAAwBC,MAFlC;AAGPC,gBAAQ,EAAR,iFAHO;;AAAA,OAAV,CAMmC,E,+EAiBa,sF,EAjBb,GAAvBtB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,UAAMuB,UAAU,GAAG,CAAC,gGAAD,CAAnB;;;;;;;;;;;;;;;;ACFP;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eCMf;AAEA;;;UAGaC,qBAAqB;AAC9B,uCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAAqB;;AADX;AAAA;AAAA,6CAGXC,WAHW,EAGI;AAE9B,mBAAO,KAAKD,IAAL,CAAUE,IAAV,CAAoB,qEAAYC,QAAZ,GAAuB,sBAA3C,EAAmEF,WAAnE,CAAP;AAED;AAP2B;;AAAA;AAAA,S;;;;gBATzB;;;;AASIF,2BAAqB,6DADjC,kEACiC,E,+EACJ,+D,EADI,GAArBA,qBAAqB,CAArB","file":"modules-changepassword-changepassword-routing-module-es5.js","sourcesContent":["/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n/* Containers */\nimport * as changepasswordContainers from './containers';\n\n/* Services */\nimport * as changepasswordServices from './services';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n    ],\n    providers: [...changepasswordServices.services],\n    declarations: [...changepasswordContainers.containers],\n    exports: [...changepasswordContainers.containers],\n})\nexport class ChangepasswordModule {}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SBRouteData } from '@modules/navigation/models';\n\n/* Module */\nimport { ChangepasswordModule } from './changepassword.module';\n\n/* Containers */\nimport * as changepasswordContainers from './containers';\n\n/* Routes */\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        canActivate: [],\n        component: changepasswordContainers.ChangepasswordComponent,\n        data: {\n            title: 'Changepassword - BRC',\n            breadcrumbs: [\n                {\n                    text: 'Dashboard',\n                    link: '/dashboard',\n                },\n                {\n                    text: 'Changepassword',\n                    active: true,\n                },\n            ],\n        } as SBRouteData,\n    },\n];\n\n@NgModule({\n    imports: [ChangepasswordModule, RouterModule.forChild(ROUTES)],\n    exports: [RouterModule],\n})\nexport class ChangepasswordRoutingModule {}\n","import { ChangepasswordService } from './changepassword.service';\n\nexport const services = [ChangepasswordService];\n\nexport * from './changepassword.service';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjaGFuZ2VwYXNzd29yZC5jb21wb25lbnQuc2NzcyJ9 */\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ChangepasswordService } from '@modules/changepassword/services';\n// import { ToastrService } from 'ngx-toastr';\n@Component({\n    selector: 'sb-changepassword',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './changepassword.component.html',\n    styleUrls: ['changepassword.component.scss'],\n})\nexport class ChangepasswordComponent implements OnInit {\n      \n  \n\n      userDetails!: User;\n      username:any = localStorage.getItem(\"user_name\");\n      email = localStorage.getItem('email')\n      first_name = localStorage.getItem('first_name')\n\n      form = {\n        \"username\": \"string\",\n        \"old_password\": \"string\",\n        \"new_password\": \"string\",\n        \"confirm_password\": \"string\",\n      }\n\n     \n    constructor( private changepasswordService : ChangepasswordService) {}\n    ngOnInit() {\n   \n        this.changepasswordService.postChangepassword(this.username).subscribe(data => {\n            this.userDetails = data;\n            console.log(this.userDetails,\"userDetails\")\n            console.log(this.first_name,\"first_name\")\n          });\n\n    }\n    name = localStorage.getItem('first_name')\n    last_name = localStorage.getItem('last_name')\n    sid = localStorage.getItem('sid')\n\n    onSubmit(): void {\n        \n            this.changepasswordService.postChangepassword(this.userDetails).subscribe({ \n                next: updateuser => { console.log(updateuser, \"updateuser\");}\n            });\n            alert(\"User details updated successfully\")\n    }\n\n    // showSuccess() {\n    //     this.toastr.success('Hello, world!', 'Success!');\n    //   }\n}\n\nexport interface User{\n    username: string,\n    old_password: string,\n    new_password: string,\n    confirm_password: string,\n}\n","import { ChangepasswordComponent } from './changepassword/changepassword.component';\n\nexport const containers = [ChangepasswordComponent];\n\nexport * from './changepassword/changepassword.component';\n","export default \"<sb-layout-dashboard>\\n    <sb-dashboard-head title=\\\"Change Password\\\" [hideBreadcrumbs]=\\\"false\\\"></sb-dashboard-head>\\n    <sb-card>\\n        <div class=\\\"card-body\\\">\\n            <form *ngIf=\\\"!isSuccessful\\\" name=\\\"form\\\" (ngSubmit)=\\\"nf.form.valid && onSubmit()\\\" #nf=\\\"ngForm\\\">\\n                    <div class=\\\"container\\\">\\n                        <div class=\\\"row justify-content-center\\\">\\n                            <div class=\\\"col-lg-5\\\">\\n                                <div class=\\\"card shadow-lg border-0 rounded-lg mt-5\\\">\\n                                    <!-- <div class=\\\"card-header\\\"><h3 class=\\\"text-center font-weight-light my-4\\\">Password Recovery</h3></div> -->\\n                                    <div class=\\\"card-body\\\">\\n                                        <!-- <div class=\\\"small mb-3 text-muted\\\">Enter your email address and we will send you a link to reset your password.</div> -->\\n                                        <form>\\n                                            <div class=\\\"form-group\\\">\\n                                                <div>\\n                                                <label class=\\\"small mb-1\\\" for=\\\"username\\\">Email</label>\\n                                                <input class=\\\"form-control py-4\\\" id=\\\"username\\\" type=\\\"email\\\" \\n                                                 placeholder=\\\"Enter email address\\\" required \\n                                                #username=\\\"ngModel\\\" name=\\\"username\\\" [(ngModel)]=\\\"username\\\"/>\\n                                                \\n                                                <!-- <div class=\\\"alert-danger\\\" *ngIf=\\\"username.errors && nf.submitted\\\">\\n                                                    <div *ngIf=\\\"username.errors['required']\\\">Username is required</div>\\n                                                    \\n                                                </div> -->\\n                                                  </div>\\n                                                <label class=\\\"small mb-1\\\" for=\\\"old_password\\\">Old Password</label>\\n                                                <input class=\\\"form-control py-4\\\" id=\\\"old_password\\\" type=\\\"password\\\"\\n                                                 placeholder=\\\"Enter old password\\\" required\\n                                                 #old_password=\\\"ngModel\\\" name=\\\"old_password\\\" [(ngModel)]=\\\"old_password\\\"/>\\n                                                <label class=\\\"small mb-1\\\" for=\\\"new_password\\\">New Password</label>\\n                                                <input class=\\\"form-control py-4\\\" id=\\\"new_password\\\" type=\\\"password\\\"\\n                                                  placeholder=\\\"Enter new password\\\" required\\n                                                  #new_password=\\\"ngModel\\\" name=\\\"new_password\\\" [(ngModel)]=\\\"new_password\\\"/>\\n                                                <label class=\\\"small mb-1\\\" for=\\\"confirm_password\\\">Confirm New Password</label>\\n                                                <input class=\\\"form-control py-4\\\" id=\\\"confirm_password\\\" type=\\\"password\\\"\\n                                                  placeholder=\\\"Enter new confirm password\\\" required\\n                                                  #confirm_password=\\\"ngModel\\\" name=\\\"confirm_password\\\" [(ngModel)]=\\\"confirm_password\\\"/>\\n                                            </div>\\n                                            <div class=\\\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\\\">\\n                                                <!-- <a class=\\\"btn btn-primary\\\" >Change Password</a> -->\\n                                                <button class=\\\"btn btn-primary mr-0\\\" >Change Password</button>\\n                                            </div>\\n                                        </form>\\n                                    </div>\\n                                    \\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                \\n            </form>\\n        </div>\\n        \\n    </sb-card>\\n</sb-layout-dashboard>\";","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nimport {environment} from 'environments/environment';\n\n// const API_URL = 'http://18.207.93.25:5000/api';\n\n// const API_URL  = 'http://192.168.1.23:5000/api';\n\n@Injectable()\nexport class ChangepasswordService {\n    constructor(private http: HttpClient) { }\n   \n    postChangepassword(formdetails:any): Observable<any> {\n\n        return this.http.post<any>(environment.basePath + \"/user/reset_password\", formdetails);\n  \n      }\n}\n"]}