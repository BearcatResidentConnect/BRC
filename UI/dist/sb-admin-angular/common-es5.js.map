{"version":3,"sources":["webpack:///src/modules/profile/containers/index.ts","webpack:///src/modules/profile/containers/profile/profile.component.ts","webpack:///src/modules/profile/containers/profile/profile.component.html","webpack:///src/modules/profile/services/index.ts","webpack:///src/modules/profile/services/profile.service.ts","webpack:///src/modules/profile/profile.module.ts","webpack:///src/modules/profile/containers/profile/profile.component.scss"],"names":["containers","ProfileComponent","profileService","user_name","localStorage","getItem","email","access_token","first_name","name","last_name","username","sid","getUser","subscribe","data","userDetails","console","log","nf","form","valid","isFormDirty","updateUser","next","updateuser","alert","Object","values","controls","some","control","dirty","selector","changeDetection","OnPush","template","services","ProfileService","http","userName","get","basePath","formdetails","put","ProfileModule","imports","providers","declarations","exports"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { ProfileComponent } from './profile/profile.component';\n\nexport const containers = [ProfileComponent];\n\nexport * from './profile/profile.component';\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ProfileService } from '@modules/profile/services';\n// import { ToastrService } from 'ngx-toastr';\nimport { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n    selector: 'sb-profile',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    templateUrl: './profile.component.html',\n    styleUrls: ['profile.component.scss'],\n})\nexport class ProfileComponent implements OnInit {\n      \n  \n    @ViewChild('nf', { static: false }) nf!: NgForm;\n\n      userDetails!: User;\n      user_name:any = localStorage.getItem(\"user_name\");\n      email = localStorage.getItem('email')\n      access_token = localStorage.getItem('access_token')\n      first_name = localStorage.getItem('first_name')\n\n     \n    \n\n    constructor( private profileService : ProfileService) {}\n    ngOnInit() {\n   \n        this.profileService.getUser(this.user_name).subscribe(data => {\n            this.userDetails = data;\n            console.log(this.userDetails,\"userDetails\")\n            console.log(this.first_name,\"first_name\")\n          });\n\n    }\n    name = localStorage.getItem('first_name')\n    last_name = localStorage.getItem('last_name')\n    username = localStorage.getItem('user_name')\n    sid = localStorage.getItem('sid')\n\n    onSubmit(): void {\n        if (this.nf.form.valid) {\n            if (this.isFormDirty()) {\n                this.profileService.updateUser(this.userDetails).subscribe({\n                    next: updateuser => {\n                        console.log(updateuser, \"updateuser\");\n                        alert(\"User details updated successfully\");\n                    }\n                });\n            } else {\n                alert(\"No changes made to user details\");\n            }\n        }\n    }\n    \n    \n    isFormDirty(): boolean {\n        return Object.values(this.nf.form.controls).some(control => control.dirty);\n    }\n    \n}\n\nexport interface User{\n    user_name: string,\n    sid: any,\n    email: string,\n    first_name: string,\n    last_name: string,\n}\n","export default \"<sb-layout-dashboard>\\n    <sb-dashboard-head title=\\\"Update Profile\\\" [hideBreadcrumbs]=\\\"false\\\"></sb-dashboard-head>\\n    <sb-card>\\n        <div class=\\\"card-body\\\">\\n            <h3 class=\\\"card-title mb-0 text-heading fs-22 lh-15\\\">Contact information</h3>\\n            <!-- <p class=\\\"card-text\\\">Lorem ipsum dolor sit amet, consectetur adipiscing elit</p> -->\\n            <form *ngIf=\\\"!isSuccessful\\\" name=\\\"form\\\" (ngSubmit)=\\\"nf.form.valid && onSubmit()\\\" #nf=\\\"ngForm\\\">\\n             <div class=\\\"form-row mx-n4\\\">\\n                <div class=\\\"form-group col-md-6 px-4\\\">\\n                    <label for=\\\"username\\\" class=\\\"text-heading\\\">Username</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" [ngModel]=\\\"user_name\\\"  id=\\\"username\\\" name=\\\"username\\\" disabled/>\\n                </div>\\n                <div class=\\\"form-group col-md-6 px-4\\\">\\n                    <label for=\\\"sid\\\" class=\\\"text-heading\\\">SID</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" [ngModel]=\\\"userDetails.sid\\\"  id=\\\"sid\\\" name=\\\"sid\\\" disabled/>\\n                </div>\\n            </div>\\n            <div class=\\\"form-row mx-n4\\\">\\n                <div class=\\\"form-group col-md-6 px-4\\\">\\n                    <label for=\\\"phone\\\" class=\\\"text-heading\\\">FirstName</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" [(ngModel)]=\\\"userDetails.first_name\\\" id=\\\"first_name\\\" name=\\\"first_name\\\" required/>\\n                    <!-- <div class=\\\"alert-danger\\\" *ngIf=\\\"firstname.errors && nf.submitted\\\">\\n                        <div *ngIf=\\\"first_name.errors['required']\\\">Firstname is required</div>\\n                    </div> -->\\n                </div>\\n                <div class=\\\"form-group col-md-6 px-4\\\">\\n                    <label for=\\\"mobile\\\" class=\\\"text-heading\\\">LastName</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control form-control-md\\\" [(ngModel)]=\\\"userDetails.last_name\\\" id=\\\"last_name\\\" name=\\\"last_name\\\" required/>\\n                </div>\\n            </div>\\n            <div class=\\\"form-row mx-n4\\\">\\n                <div class=\\\"form-group col-md-6 px-4 mb-md-0\\\">\\n                    <label for=\\\"email\\\" class=\\\"text-heading\\\">Email</label>\\n                    <input type=\\\"email\\\" class=\\\"form-control form-control-md\\\" [(ngModel)]=\\\"userDetails.email\\\" id=\\\"email\\\" name=\\\"email\\\" required \\n                    pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"/>\\n                    <div class=\\\"alert-danger\\\" *ngIf=\\\"email.errors && f.submitted\\\">\\n                        <div *ngIf=\\\"email.errors['required']\\\">Email is required</div>\\n                        <div *ngIf=\\\"email.errors && email.pattern\\\">\\n                          Email must be a valid email address\\n                        </div>\\n                      </div>\\n                </div>\\n            </div>\\n           \\n            <div class=\\\"d-flex justify-content-end flex-wrap pt-3\\\">\\n                <button class=\\\"btn btn-outline-primary mr-0\\\"  (click)=\\\"openDialog()\\\">Update</button>\\n            </div>\\n            </form>\\n        </div>\\n        \\n    </sb-card>\\n</sb-layout-dashboard>\\n\";","import { ProfileService } from './profile.service';\n\nexport const services = [ProfileService];\n\nexport * from './profile.service';\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nimport {environment} from 'environments/environment';\n\n// const API_URL = 'http://18.207.93.25:5000/api';\n\n// const API_URL  = 'http://192.168.1.23:5000/api';\n\n@Injectable()\nexport class ProfileService {\n    constructor(private http: HttpClient) { }\n   \n    getUser(userName: string): Observable<any> {\n        return this.http.get(environment.basePath + '/users/' + userName )   \n      }\n\n    updateUser(formdetails:any): Observable<any> {\n          return this.http.put<any>(environment.basePath + \"/user\", formdetails);\n        }\n}\n","/* tslint:disable: ordered-imports*/\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n/* Modules */\nimport { AppCommonModule } from '@common/app-common.module';\nimport { NavigationModule } from '@modules/navigation/navigation.module';\n\n/* Containers */\nimport * as profileContainers from './containers';\n\n/* Services */\nimport * as profileServices from './services';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        RouterModule,\n        ReactiveFormsModule,\n        FormsModule,\n        AppCommonModule,\n        NavigationModule,\n    ],\n    providers: [...profileServices.services],\n    declarations: [...profileContainers.containers],\n    exports: [...profileContainers.containers],\n})\nexport class ProfileModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9maWxlLmNvbXBvbmVudC5zY3NzIn0= */\";"]}